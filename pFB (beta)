const mysql = require('mysql');
const prompt = require('prompt-sync')();

let alfa_pro = '';
let textoResumo = '';

const connection = mysql.createConnection({
  host: 'localhost',
  user: 'root',
  password: '',
  database: 'clientes'
});

  let i = 1;
  while (true) {
    let programa = prompt('Você deseja: 1-criar um novo protocolo  2-verificar protocolos existentes  3-resumo de um protocolo  999-finalizar o programa ');

    if (programa === '999') {
      console.log('Volte sempre!');
      break;
    } else if (programa === '2') {
      connection.query('SELECT * FROM protocol', (err, results) => {
        console.log(results);
      });
    }else if(programa === '3'){
    let resumo = prompt ('Qual o protocolo que deseja conferir?')
    for (var j = 0; j < resumo.length; j++) {
      switch (digito) {
        case '1':
          if(j === 0){
          textoResumo += 'Tipo: Fibra\n';
          }else if(j === 1){
          textoResumo += 'Empresa: Trip\n';  
          }else if(j === 2){
          textoResumo += 'Prioridade: Residencial\n';  
          }else if(j === 3){
          textoResumo += 'Alarmes: Link_Loss\n';  
          }else if(j === 4){
          textoResumo += 'Roteador: Comodato\n';  
          }else if(j === 5){
          textoResumo += 'Acesso: Tenho acesso ao roteador\n';  
          }else if(j === 6){
          textoResumo += 'Sinal ONU: Ruim\n';  //tirar 
          }else if(j === 7){
          textoResumo += 'ONU em: Router\n';  
          }else if(j === 8){
          textoResumo += 'Login: admin\n';  
          }else if(j === 9){
          textoResumo += 'Senha: somente PPPoE\n';  
          } 
          break;
        case '2':
          if(j === 0){
          textoResumo += 'Tipo: Cabo\n';
          }else if(j === 1){
          textoResumo += 'Empresa: FBnet\n';  
          }else if(j === 2){
          textoResumo += 'Prioridade: Empresarial\n';  
          }else if(j === 3){
          textoResumo += 'Alarmes: Board_Aport\n';  
          }else if(j === 4){
          textoResumo += 'Roteador: Próprio\n';  
          }else if(j === 5){
          textoResumo += 'Acesso: Sem acesso ao roteador\n';  
          }else if(j === 6){
          textoResumo += 'Sinal ONU: Preocupante\n';  //tirar 
          }else if(j === 7){
          textoResumo += 'ONU em: Bridge\n';  
          }else if(j === 8){
          textoResumo += 'Login: User\n';  
          }else if(j === 9){
          textoResumo += 'Senha: Fb@2PPPoE\n';  
          } 
        case '3':
          if(j === 0){
          textoResumo += 'Tipo: Rádio\n';
          }else if(j === 2){
          textoResumo += 'Prioridade: Dedicado\n';  
          }else if(j === 3){
          textoResumo += 'Alarmes: Dying_Gasp\n';
          }else if(j === 6){
          textoResumo += 'Sinal ONU: Bom\n';  //tirar   
          }else if(j === 8){
          textoResumo += 'Login: Multipro\n';  
          }else if(j === 9){
          textoResumo += 'Senha: *123FBmudar\n';  
          } 
          break;
        case '4':
          if(j === 3){
          textoResumo += 'Alarmes: Overtrash\n';
          }
          break;
        default:
          // Se o dígito não estiver entre 1 e 4, você pode lidar com o erro aqui
          break;
    }
  }
    }else if (programa === '1') {
      let nome = prompt('Qual o nome completo da pessoa? ');

      let tipo_plano = prompt('1-Fibra  2-Cabo  3-Rádio ');
        switch(tipo_plano){
          case '1':
            alfa_pro += 'F'
          break;
          case '2':
            alfa_pro += 'C'
          break;
          case '3':
            alfa_pro += 'R'
          break;
          default:
                console.log("Você digitou um número inválido, tente novamente.\n")
          break;
        }
      
      let tipo_trip = prompt('1-Trip  2-FBnet ');
        switch(tipo_trip){
          case '1':
            alfa_pro += 'Tp'
          break;
          case '2':
            alfa_pro += 'Fb'
          break;
          default:
                console.log("Você digitou um número inválido, tente novamente.\n")
          break;
        }
      
      let tipo_preferencia = prompt('1-Residencial  2-Empresarial  3-Dedicado ');
        switch(tipo_preferencia){
          case '1':
            alfa_pro += 'R'
          break;
          case '2':
            alfa_pro += 'E'
          break;
          case '3':
            alfa_pro += 'D'
          break;
          default:
                console.log("Você digitou um número inválido, tente novamente.\n")
          break;
        }
      
      let tipo_alarme = prompt('1-Link_Loss  2-Board_Aport  3-Dying_Gasp  4-Overtrash ');
        switch(tipo_alarme){
          case '1':
            alfa_pro += 'll'
          break;
          case '2':
            alfa_pro += 'ba'
          break;
          case '3':
            alfa_pro += 'dg'
          break;
          case '4':
            alfa_pro += 'ot'
          break;
          default:
                console.log("Você digitou um número inválido, tente novamente.\n")
          break;
        }
      let tipo_rote = prompt('1-Comodato  2-Próprio ');
        switch(tipo_rote){
          case '1':
            alfa_pro += 'Com'
          break;
          case '2':
            alfa_pro += 'Pro'
          break;
          default:
                console.log("Você digitou um número inválido, tente novamente.\n")
          break;
        }
      let tipo_roteA = prompt('1-Tenho acesso  2-Não tenho acesso ');
        switch(tipo_roteA){
          case '1':
            alfa_pro += 'Ta'
          break;
          case '2':
            alfa_pro += 'Sa'
          break;
          default:
                console.log("Você digitou um número inválido, tente novamente.\n")
          break;
        }
      let tipo_sinal = prompt('1-Ruim(-30dbm ^)  2-Preocupante(-27dbm)  3-Bom(-26dbm v) ');
        switch(tipo_sinal){
          case '1':
            alfa_pro += 'R'
          break;
          case '2':
            alfa_pro += 'P'
          break;
          case '3':
            alfa_pro += 'B'
          break;
          default:
                console.log("Você digitou um número inválido, tente novamente.\n")
          break;
        }
      let tipo_aut = prompt('1-Router  2-Bridge ');
        switch(tipo_aut){
          case '1':
            alfa_pro += 'rtr'
          break;
          case '2':
            alfa_pro += 'brg'
          break;
          default:
                console.log("Você digitou um número inválido, tente novamente.\n")
          break;
        }
      let tipo_login = prompt('1-Admin  2-User  3-Multipro ');
        switch(tipo_login){
          case '1':
            alfa_pro += 'A'
          break;
          case '2':
            alfa_pro += 'U'
          break;
          case '3':
            alfa_pro += 'M'
          break;
          default:
                console.log("Você digitou um número inválido, tente novamente.\n")
          break;
        }
      let tipo_login_senha = prompt ('1-PPPoE  2-Fb@2+PPPoE  3-*123FBmudar ')
        switch(tipo_login_senha){
          case '1':
            alfa_pro += 'PP'
          break;
          case '2':
            alfa_pro += 'Fb'
          break;
          case '3':
            alfa_pro += '*1'
          break;
          default:
                console.log("Você digitou um número inválido, tente novamente.\n")
          break;
        }
        
      let codigo = `${tipo_plano}${tipo_trip}${tipo_preferencia}${tipo_alarme}${tipo_rote}${tipo_roteA}${tipo_sinal}${tipo_aut}${tipo_login}${tipo_login_senha}`;
        
      let sql = 'INSERT INTO protocol (alfa_pro, codigo, nome, data_hora) VALUES (?, ?, ?, CURRENT_TIMESTAMP)';
      let values = [alfa_pro, codigo, nome];

      connection.query(sql, values, (err) => {
        if (err) {
          console.error('Erro ao inserir dados:', err);
          return;
        }
        console.log('Dados inseridos com sucesso!');
      });
    } else {
      console.log('Código inválido\n\n');
    }

    i++;
  }

  connection.end();
